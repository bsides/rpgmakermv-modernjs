{"version":3,"sources":["../../src/core/bitmap.js"],"names":["Bitmap","initialize","apply","arguments","_reuseImages","prototype","_createCanvas","width","height","__canvas","document","createElement","__context","getContext","Math","max","_image","w","h","_createBaseTexture","_canvas","drawImage","_setDirty","source","__baseTexture","PIXI","BaseTexture","mipmap","_smooth","_baseTexture","scaleMode","SCALE_MODES","LINEAR","NEAREST","_clearImgInstance","src","onload","onerror","_errorListener","_loadListener","push","Object","defineProperties","get","_context","_renewCanvas","newImage","_defer","_url","_paintOpacity","_loadListeners","_loadingState","_decodeAfterRequest","cacheEntry","fontFace","fontSize","fontItalic","textColor","outlineColor","outlineWidth","load","url","bitmap","create","_requestImage","snap","stage","Graphics","context","renderTexture","RenderTexture","_renderer","render","worldTransform","identity","canvas","isWebGL","extract","baseTexture","_canvasRenderTarget","destroy","destroyBase","isReady","isError","touch","defineProperty","configurable","Rectangle","set","value","globalAlpha","resize","blt","sx","sy","sw","sh","dx","dy","dw","dh","globalCompositeOperation","bltImage","getPixel","x","y","data","getImageData","result","i","toString","padZero","getAlphaPixel","clearRect","clear","fillRect","color","save","fillStyle","restore","fillAll","gradientFillRect","color1","color2","vertical","grad","createLinearGradient","addColorStop","drawCircle","radius","beginPath","arc","PI","fill","drawText","text","maxWidth","lineHeight","align","undefined","tx","ty","alpha","font","_makeFontNameText","textAlign","textBaseline","_drawTextOutline","_drawTextBody","measureTextWidth","measureText","adjustTone","r","g","b","imageData","pixels","length","putImageData","rotateHue","offset","rgbToHsl","cmin","min","cmax","s","l","delta","abs","hslToRgb","c","m","cm","xm","hsl","rgb","blur","tempCanvas","tempContext","addLoadListener","listner","strokeStyle","lineWidth","lineJoin","strokeText","fillText","_onLoad","removeEventListener","decode","window","URL","revokeObjectURL","_callLoadListeners","_loader","ResourceHandler","createLoader","bind","_onError","addEventListener","listener","shift","_dirty","checkDirty","update","request","pop","Image","Decrypter","checkImgIgnore","hasEncryptedImages","decryptImg","isRequestOnly","isRequestReady","startRequest"],"mappings":";;;;;;;;;;;;;;;;;;oBASwBA,M;AATxB;AACA;;;;;;;;AAQe,WAASA,MAAT,GAAkB;AAC/B,SAAKC,UAAL,CAAgBC,KAAhB,CAAsB,IAAtB,EAA4BC,SAA5B;AACD;;AAED;AACAH,SAAOI,YAAP,GAAsB,EAAtB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCAJ,SAAOK,SAAP,CAAiBC,aAAjB,GAAiC,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;AACvD,SAAKC,QAAL,GAAgB,KAAKA,QAAL,IAAiBC,SAASC,aAAT,CAAuB,QAAvB,CAAjC;AACA,SAAKC,SAAL,GAAiB,KAAKH,QAAL,CAAcI,UAAd,CAAyB,IAAzB,CAAjB;;AAEA,SAAKJ,QAAL,CAAcF,KAAd,GAAsBO,KAAKC,GAAL,CAASR,SAAS,CAAlB,EAAqB,CAArB,CAAtB;AACA,SAAKE,QAAL,CAAcD,MAAd,GAAuBM,KAAKC,GAAL,CAASP,UAAU,CAAnB,EAAsB,CAAtB,CAAvB;;AAEA,QAAI,KAAKQ,MAAT,EAAiB;AACf,UAAIC,IAAIH,KAAKC,GAAL,CAAS,KAAKC,MAAL,CAAYT,KAAZ,IAAqB,CAA9B,EAAiC,CAAjC,CAAR;AACA,UAAIW,IAAIJ,KAAKC,GAAL,CAAS,KAAKC,MAAL,CAAYR,MAAZ,IAAsB,CAA/B,EAAkC,CAAlC,CAAR;AACA,WAAKC,QAAL,CAAcF,KAAd,GAAsBU,CAAtB;AACA,WAAKR,QAAL,CAAcD,MAAd,GAAuBU,CAAvB;AACA,WAAKC,kBAAL,CAAwB,KAAKC,OAA7B;;AAEA,WAAKR,SAAL,CAAeS,SAAf,CAAyB,KAAKL,MAA9B,EAAsC,CAAtC,EAAyC,CAAzC;AACD;;AAED,SAAKM,SAAL;AACD,GAlBD;;AAoBAtB,SAAOK,SAAP,CAAiBc,kBAAjB,GAAsC,UAASI,MAAT,EAAiB;AACrD,SAAKC,aAAL,GAAqB,IAAIC,KAAKC,WAAT,CAAqBH,MAArB,CAArB;AACA,SAAKC,aAAL,CAAmBG,MAAnB,GAA4B,KAA5B;AACA,SAAKH,aAAL,CAAmBjB,KAAnB,GAA2BgB,OAAOhB,KAAlC;AACA,SAAKiB,aAAL,CAAmBhB,MAAnB,GAA4Be,OAAOf,MAAnC;;AAEA,QAAI,KAAKoB,OAAT,EAAkB;AAChB,WAAKC,YAAL,CAAkBC,SAAlB,GAA8BL,KAAKM,WAAL,CAAiBC,MAA/C;AACD,KAFD,MAEO;AACL,WAAKH,YAAL,CAAkBC,SAAlB,GAA8BL,KAAKM,WAAL,CAAiBE,OAA/C;AACD;AACF,GAXD;;AAaAjC,SAAOK,SAAP,CAAiB6B,iBAAjB,GAAqC,YAAW;AAC9C,SAAKlB,MAAL,CAAYmB,GAAZ,GAAkB,EAAlB;AACA,SAAKnB,MAAL,CAAYoB,MAAZ,GAAqB,IAArB;AACA,SAAKpB,MAAL,CAAYqB,OAAZ,GAAsB,IAAtB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,aAAL,GAAqB,IAArB;;AAEAvC,WAAOI,YAAP,CAAoBoC,IAApB,CAAyB,KAAKxB,MAA9B;AACA,SAAKA,MAAL,GAAc,IAAd;AACD,GATD;;AAWA;AACA;AACA;AACAyB,SAAOC,gBAAP,CAAwB1C,OAAOK,SAA/B,EAA0C;AACxCe,aAAS;AACPuB,WAAK,eAAW;AACd,YAAI,CAAC,KAAKlC,QAAV,EAAoB,KAAKH,aAAL;AACpB,eAAO,KAAKG,QAAZ;AACD;AAJM,KAD+B;AAOxCmC,cAAU;AACRD,WAAK,eAAW;AACd,YAAI,CAAC,KAAK/B,SAAV,EAAqB,KAAKN,aAAL;AACrB,eAAO,KAAKM,SAAZ;AACD;AAJO,KAP8B;;AAcxCiB,kBAAc;AACZc,WAAK,eAAW;AACd,YAAI,CAAC,KAAKnB,aAAV,EACE,KAAKL,kBAAL,CAAwB,KAAKH,MAAL,IAAe,KAAKP,QAA5C;AACF,eAAO,KAAKe,aAAZ;AACD;AALW;AAd0B,GAA1C;;AAuBAxB,SAAOK,SAAP,CAAiBwC,YAAjB,GAAgC,YAAW;AACzC,QAAIC,WAAW,KAAK9B,MAApB;AACA,QACE8B,YACA,KAAKrC,QADL,KAEC,KAAKA,QAAL,CAAcF,KAAd,GAAsBuC,SAASvC,KAA/B,IACC,KAAKE,QAAL,CAAcD,MAAd,GAAuBsC,SAAStC,MAHlC,CADF,EAKE;AACA,WAAKF,aAAL;AACD;AACF,GAVD;;AAYAN,SAAOK,SAAP,CAAiBJ,UAAjB,GAA8B,UAASM,KAAT,EAAgBC,MAAhB,EAAwB;AACpD,QAAI,CAAC,KAAKuC,MAAV,EAAkB;AAChB,WAAKzC,aAAL,CAAmBC,KAAnB,EAA0BC,MAA1B;AACD;;AAED,SAAKQ,MAAL,GAAc,IAAd;AACA,SAAKgC,IAAL,GAAY,EAAZ;AACA,SAAKC,aAAL,GAAqB,GAArB;AACA,SAAKrB,OAAL,GAAe,KAAf;AACA,SAAKsB,cAAL,GAAsB,EAAtB;AACA,SAAKC,aAAL,GAAqB,MAArB;AACA,SAAKC,mBAAL,GAA2B,KAA3B;;AAEA;;;;AAIA,SAAKC,UAAL,GAAkB,IAAlB;;AAEA;;;;;;AAMA,SAAKC,QAAL,GAAgB,UAAhB;;AAEA;;;;;;AAMA,SAAKC,QAAL,GAAgB,EAAhB;;AAEA;;;;;;AAMA,SAAKC,UAAL,GAAkB,KAAlB;;AAEA;;;;;;AAMA,SAAKC,SAAL,GAAiB,SAAjB;;AAEA;;;;;;AAMA,SAAKC,YAAL,GAAoB,oBAApB;;AAEA;;;;;;AAMA,SAAKC,YAAL,GAAoB,CAApB;AACD,GAlED;;AAoEA;;;;;;;;AAQA3D,SAAO4D,IAAP,GAAc,UAASC,GAAT,EAAc;AAC1B,QAAIC,SAASrB,OAAOsB,MAAP,CAAc/D,OAAOK,SAArB,CAAb;AACAyD,WAAOf,MAAP,GAAgB,IAAhB;AACAe,WAAO7D,UAAP;;AAEA6D,WAAOV,mBAAP,GAA6B,IAA7B;AACAU,WAAOE,aAAP,CAAqBH,GAArB;;AAEA,WAAOC,MAAP;AACD,GATD;;AAWA;;;;;;;;AAQA9D,SAAOiE,IAAP,GAAc,UAASC,KAAT,EAAgB;AAC5B,QAAI3D,QAAQ4D,SAAS5D,KAArB;AACA,QAAIC,SAAS2D,SAAS3D,MAAtB;AACA,QAAIsD,SAAS,IAAI9D,MAAJ,CAAWO,KAAX,EAAkBC,MAAlB,CAAb;AACA,QAAI4D,UAAUN,OAAOlB,QAArB;AACA,QAAIyB,gBAAgB5C,KAAK6C,aAAL,CAAmBP,MAAnB,CAA0BxD,KAA1B,EAAiCC,MAAjC,CAApB;AACA,QAAI0D,KAAJ,EAAW;AACTC,eAASI,SAAT,CAAmBC,MAAnB,CAA0BN,KAA1B,EAAiCG,aAAjC;AACAH,YAAMO,cAAN,CAAqBC,QAArB;AACA,UAAIC,SAAS,IAAb;AACA,UAAIR,SAASS,OAAT,EAAJ,EAAwB;AACtBD,iBAASR,SAASI,SAAT,CAAmBM,OAAnB,CAA2BF,MAA3B,CAAkCN,aAAlC,CAAT;AACD,OAFD,MAEO;AACLM,iBAASN,cAAcS,WAAd,CAA0BC,mBAA1B,CAA8CJ,MAAvD;AACD;AACDP,cAAQ/C,SAAR,CAAkBsD,MAAlB,EAA0B,CAA1B,EAA6B,CAA7B;AACD,KAVD,MAUO,CACN;AACDN,kBAAcW,OAAd,CAAsB,EAAEC,aAAa,IAAf,EAAtB;AACAnB,WAAOxC,SAAP;AACA,WAAOwC,MAAP;AACD,GArBD;;AAuBA;;;;;;AAMA9D,SAAOK,SAAP,CAAiB6E,OAAjB,GAA2B,YAAW;AACpC,WAAO,KAAK/B,aAAL,KAAuB,QAAvB,IAAmC,KAAKA,aAAL,KAAuB,MAAjE;AACD,GAFD;;AAIA;;;;;;AAMAnD,SAAOK,SAAP,CAAiB8E,OAAjB,GAA2B,YAAW;AACpC,WAAO,KAAKhC,aAAL,KAAuB,OAA9B;AACD,GAFD;;AAIA;;;;AAIAnD,SAAOK,SAAP,CAAiB+E,KAAjB,GAAyB,YAAW;AAClC,QAAI,KAAK/B,UAAT,EAAqB;AACnB,WAAKA,UAAL,CAAgB+B,KAAhB;AACD;AACF,GAJD;;AAMA;;;;;;AAMA3C,SAAO4C,cAAP,CAAsBrF,OAAOK,SAA7B,EAAwC,KAAxC,EAA+C;AAC7CsC,SAAK,eAAW;AACd,aAAO,KAAKK,IAAZ;AACD,KAH4C;AAI7CsC,kBAAc;AAJ+B,GAA/C;;AAOA;;;;;;AAMA7C,SAAO4C,cAAP,CAAsBrF,OAAOK,SAA7B,EAAwC,aAAxC,EAAuD;AACrDsC,SAAK,eAAW;AACd,aAAO,KAAKd,YAAZ;AACD,KAHoD;AAIrDyD,kBAAc;AAJuC,GAAvD;;AAOA;;;;;;AAMA7C,SAAO4C,cAAP,CAAsBrF,OAAOK,SAA7B,EAAwC,QAAxC,EAAkD;AAChDsC,SAAK,eAAW;AACd,aAAO,KAAKvB,OAAZ;AACD,KAH+C;AAIhDkE,kBAAc;AAJkC,GAAlD;;AAOA;;;;;;AAMA7C,SAAO4C,cAAP,CAAsBrF,OAAOK,SAA7B,EAAwC,SAAxC,EAAmD;AACjDsC,SAAK,eAAW;AACd,aAAO,KAAKC,QAAZ;AACD,KAHgD;AAIjD0C,kBAAc;AAJmC,GAAnD;;AAOA;;;;;;AAMA7C,SAAO4C,cAAP,CAAsBrF,OAAOK,SAA7B,EAAwC,OAAxC,EAAiD;AAC/CsC,SAAK,eAAW;AACd,UAAI,KAAKuC,OAAL,EAAJ,EAAoB;AAClB,eAAO,KAAKlE,MAAL,GAAc,KAAKA,MAAL,CAAYT,KAA1B,GAAkC,KAAKa,OAAL,CAAab,KAAtD;AACD;;AAED,aAAO,CAAP;AACD,KAP8C;AAQ/C+E,kBAAc;AARiC,GAAjD;;AAWA;;;;;;AAMA7C,SAAO4C,cAAP,CAAsBrF,OAAOK,SAA7B,EAAwC,QAAxC,EAAkD;AAChDsC,SAAK,eAAW;AACd,UAAI,KAAKuC,OAAL,EAAJ,EAAoB;AAClB,eAAO,KAAKlE,MAAL,GAAc,KAAKA,MAAL,CAAYR,MAA1B,GAAmC,KAAKY,OAAL,CAAaZ,MAAvD;AACD;;AAED,aAAO,CAAP;AACD,KAP+C;AAQhD8E,kBAAc;AARkC,GAAlD;;AAWA;;;;;;AAMA7C,SAAO4C,cAAP,CAAsBrF,OAAOK,SAA7B,EAAwC,MAAxC,EAAgD;AAC9CsC,SAAK,eAAW;AACd,aAAO,IAAI4C,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAKhF,KAAzB,EAAgC,KAAKC,MAArC,CAAP;AACD,KAH6C;AAI9C8E,kBAAc;AAJgC,GAAhD;;AAOA;;;;;;AAMA7C,SAAO4C,cAAP,CAAsBrF,OAAOK,SAA7B,EAAwC,QAAxC,EAAkD;AAChDsC,SAAK,eAAW;AACd,aAAO,KAAKf,OAAZ;AACD,KAH+C;AAIhD4D,SAAK,aAASC,KAAT,EAAgB;AACnB,UAAI,KAAK7D,OAAL,KAAiB6D,KAArB,EAA4B;AAC1B,aAAK7D,OAAL,GAAe6D,KAAf;AACA,YAAI,KAAKjE,aAAT,EAAwB;AACtB,cAAI,KAAKI,OAAT,EAAkB;AAChB,iBAAKC,YAAL,CAAkBC,SAAlB,GAA8BL,KAAKM,WAAL,CAAiBC,MAA/C;AACD,WAFD,MAEO;AACL,iBAAKH,YAAL,CAAkBC,SAAlB,GAA8BL,KAAKM,WAAL,CAAiBE,OAA/C;AACD;AACF;AACF;AACF,KAf+C;AAgBhDqD,kBAAc;AAhBkC,GAAlD;;AAmBA;;;;;;AAMA7C,SAAO4C,cAAP,CAAsBrF,OAAOK,SAA7B,EAAwC,cAAxC,EAAwD;AACtDsC,SAAK,eAAW;AACd,aAAO,KAAKM,aAAZ;AACD,KAHqD;AAItDuC,SAAK,aAASC,KAAT,EAAgB;AACnB,UAAI,KAAKxC,aAAL,KAAuBwC,KAA3B,EAAkC;AAChC,aAAKxC,aAAL,GAAqBwC,KAArB;AACA,aAAK7C,QAAL,CAAc8C,WAAd,GAA4B,KAAKzC,aAAL,GAAqB,GAAjD;AACD;AACF,KATqD;AAUtDqC,kBAAc;AAVwC,GAAxD;;AAaA;;;;;;;AAOAtF,SAAOK,SAAP,CAAiBsF,MAAjB,GAA0B,UAASpF,KAAT,EAAgBC,MAAhB,EAAwB;AAChDD,YAAQO,KAAKC,GAAL,CAASR,SAAS,CAAlB,EAAqB,CAArB,CAAR;AACAC,aAASM,KAAKC,GAAL,CAASP,UAAU,CAAnB,EAAsB,CAAtB,CAAT;AACA,SAAKY,OAAL,CAAab,KAAb,GAAqBA,KAArB;AACA,SAAKa,OAAL,CAAaZ,MAAb,GAAsBA,MAAtB;AACA,SAAKqB,YAAL,CAAkBtB,KAAlB,GAA0BA,KAA1B;AACA,SAAKsB,YAAL,CAAkBrB,MAAlB,GAA2BA,MAA3B;AACD,GAPD;;AASA;;;;;;;;;;;;;;AAcAR,SAAOK,SAAP,CAAiBuF,GAAjB,GAAuB,UAASrE,MAAT,EAAiBsE,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCC,EAArC,EAAyCC,EAAzC,EAA6CC,EAA7C,EAAiD;AACtED,SAAKA,MAAMJ,EAAX;AACAK,SAAKA,MAAMJ,EAAX;AACA,QACEH,MAAM,CAAN,IACAC,MAAM,CADN,IAEAC,KAAK,CAFL,IAGAC,KAAK,CAHL,IAIAG,KAAK,CAJL,IAKAC,KAAK,CALL,IAMAP,KAAKE,EAAL,IAAWxE,OAAOhB,KANlB,IAOAuF,KAAKE,EAAL,IAAWzE,OAAOf,MARpB,EASE;AACA,WAAKoC,QAAL,CAAcyD,wBAAd,GAAyC,aAAzC;AACA,WAAKzD,QAAL,CAAcvB,SAAd,CAAwBE,OAAOH,OAA/B,EAAwCyE,EAAxC,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoDC,EAApD,EAAwDC,EAAxD,EAA4DC,EAA5D,EAAgEC,EAAhE,EAAoEC,EAApE;AACA,WAAK9E,SAAL;AACD;AACF,GAjBD;;AAmBA;;;;;;;;;;;;;;AAcAtB,SAAOK,SAAP,CAAiBiG,QAAjB,GAA4B,UAAS/E,MAAT,EAAiBsE,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCC,EAArC,EAAyCC,EAAzC,EAA6CC,EAA7C,EAAiD;AAC3ED,SAAKA,MAAMJ,EAAX;AACAK,SAAKA,MAAMJ,EAAX;AACA,QACEH,MAAM,CAAN,IACAC,MAAM,CADN,IAEAC,KAAK,CAFL,IAGAC,KAAK,CAHL,IAIAG,KAAK,CAJL,IAKAC,KAAK,CALL,IAMAP,KAAKE,EAAL,IAAWxE,OAAOhB,KANlB,IAOAuF,KAAKE,EAAL,IAAWzE,OAAOf,MARpB,EASE;AACA,WAAKoC,QAAL,CAAcyD,wBAAd,GAAyC,aAAzC;AACA,WAAKzD,QAAL,CAAcvB,SAAd,CAAwBE,OAAOP,MAA/B,EAAuC6E,EAAvC,EAA2CC,EAA3C,EAA+CC,EAA/C,EAAmDC,EAAnD,EAAuDC,EAAvD,EAA2DC,EAA3D,EAA+DC,EAA/D,EAAmEC,EAAnE;AACA,WAAK9E,SAAL;AACD;AACF,GAjBD;;AAmBA;;;;;;;;AAQAtB,SAAOK,SAAP,CAAiBkG,QAAjB,GAA4B,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACzC,QAAIC,OAAO,KAAK9D,QAAL,CAAc+D,YAAd,CAA2BH,CAA3B,EAA8BC,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuCC,IAAlD;AACA,QAAIE,SAAS,GAAb;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAC1BD,gBAAUF,KAAKG,CAAL,EAAQC,QAAR,CAAiB,EAAjB,EAAqBC,OAArB,CAA6B,CAA7B,CAAV;AACD;AACD,WAAOH,MAAP;AACD,GAPD;;AASA;;;;;;;;AAQA5G,SAAOK,SAAP,CAAiB2G,aAAjB,GAAiC,UAASR,CAAT,EAAYC,CAAZ,EAAe;AAC9C,QAAIC,OAAO,KAAK9D,QAAL,CAAc+D,YAAd,CAA2BH,CAA3B,EAA8BC,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuCC,IAAlD;AACA,WAAOA,KAAK,CAAL,CAAP;AACD,GAHD;;AAKA;;;;;;;;;AASA1G,SAAOK,SAAP,CAAiB4G,SAAjB,GAA6B,UAAST,CAAT,EAAYC,CAAZ,EAAelG,KAAf,EAAsBC,MAAtB,EAA8B;AACzD,SAAKoC,QAAL,CAAcqE,SAAd,CAAwBT,CAAxB,EAA2BC,CAA3B,EAA8BlG,KAA9B,EAAqCC,MAArC;AACA,SAAKc,SAAL;AACD,GAHD;;AAKA;;;;;AAKAtB,SAAOK,SAAP,CAAiB6G,KAAjB,GAAyB,YAAW;AAClC,SAAKD,SAAL,CAAe,CAAf,EAAkB,CAAlB,EAAqB,KAAK1G,KAA1B,EAAiC,KAAKC,MAAtC;AACD,GAFD;;AAIA;;;;;;;;;;AAUAR,SAAOK,SAAP,CAAiB8G,QAAjB,GAA4B,UAASX,CAAT,EAAYC,CAAZ,EAAelG,KAAf,EAAsBC,MAAtB,EAA8B4G,KAA9B,EAAqC;AAC/D,QAAIhD,UAAU,KAAKxB,QAAnB;AACAwB,YAAQiD,IAAR;AACAjD,YAAQkD,SAAR,GAAoBF,KAApB;AACAhD,YAAQ+C,QAAR,CAAiBX,CAAjB,EAAoBC,CAApB,EAAuBlG,KAAvB,EAA8BC,MAA9B;AACA4D,YAAQmD,OAAR;AACA,SAAKjG,SAAL;AACD,GAPD;;AASA;;;;;;AAMAtB,SAAOK,SAAP,CAAiBmH,OAAjB,GAA2B,UAASJ,KAAT,EAAgB;AACzC,SAAKD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAK5G,KAAzB,EAAgC,KAAKC,MAArC,EAA6C4G,KAA7C;AACD,GAFD;;AAIA;;;;;;;;;;;;AAYApH,SAAOK,SAAP,CAAiBoH,gBAAjB,GAAoC,UAClCjB,CADkC,EAElCC,CAFkC,EAGlClG,KAHkC,EAIlCC,MAJkC,EAKlCkH,MALkC,EAMlCC,MANkC,EAOlCC,QAPkC,EAQlC;AACA,QAAIxD,UAAU,KAAKxB,QAAnB;AACA,QAAIiF,IAAJ;AACA,QAAID,QAAJ,EAAc;AACZC,aAAOzD,QAAQ0D,oBAAR,CAA6BtB,CAA7B,EAAgCC,CAAhC,EAAmCD,CAAnC,EAAsCC,IAAIjG,MAA1C,CAAP;AACD,KAFD,MAEO;AACLqH,aAAOzD,QAAQ0D,oBAAR,CAA6BtB,CAA7B,EAAgCC,CAAhC,EAAmCD,IAAIjG,KAAvC,EAA8CkG,CAA9C,CAAP;AACD;AACDoB,SAAKE,YAAL,CAAkB,CAAlB,EAAqBL,MAArB;AACAG,SAAKE,YAAL,CAAkB,CAAlB,EAAqBJ,MAArB;AACAvD,YAAQiD,IAAR;AACAjD,YAAQkD,SAAR,GAAoBO,IAApB;AACAzD,YAAQ+C,QAAR,CAAiBX,CAAjB,EAAoBC,CAApB,EAAuBlG,KAAvB,EAA8BC,MAA9B;AACA4D,YAAQmD,OAAR;AACA,SAAKjG,SAAL;AACD,GAvBD;;AAyBA;;;;;;;;;AASAtB,SAAOK,SAAP,CAAiB2H,UAAjB,GAA8B,UAASxB,CAAT,EAAYC,CAAZ,EAAewB,MAAf,EAAuBb,KAAvB,EAA8B;AAC1D,QAAIhD,UAAU,KAAKxB,QAAnB;AACAwB,YAAQiD,IAAR;AACAjD,YAAQkD,SAAR,GAAoBF,KAApB;AACAhD,YAAQ8D,SAAR;AACA9D,YAAQ+D,GAAR,CAAY3B,CAAZ,EAAeC,CAAf,EAAkBwB,MAAlB,EAA0B,CAA1B,EAA6BnH,KAAKsH,EAAL,GAAU,CAAvC,EAA0C,KAA1C;AACAhE,YAAQiE,IAAR;AACAjE,YAAQmD,OAAR;AACA,SAAKjG,SAAL;AACD,GATD;;AAWA;;;;;;;;;;;AAWAtB,SAAOK,SAAP,CAAiBiI,QAAjB,GAA4B,UAASC,IAAT,EAAe/B,CAAf,EAAkBC,CAAlB,EAAqB+B,QAArB,EAA+BC,UAA/B,EAA2CC,KAA3C,EAAkD;AAC5E;AACA;AACA,QAAIH,SAASI,SAAb,EAAwB;AACtB,UAAIC,KAAKpC,CAAT;AACA,UAAIqC,KAAKpC,IAAIgC,UAAJ,GAAiB,CAACA,aAAa,KAAKlF,QAAL,GAAgB,GAA9B,IAAqC,CAA/D;AACA,UAAIa,UAAU,KAAKxB,QAAnB;AACA,UAAIkG,QAAQ1E,QAAQsB,WAApB;AACA8C,iBAAWA,YAAY,UAAvB;AACA,UAAIE,UAAU,QAAd,EAAwB;AACtBE,cAAMJ,WAAW,CAAjB;AACD;AACD,UAAIE,UAAU,OAAd,EAAuB;AACrBE,cAAMJ,QAAN;AACD;AACDpE,cAAQiD,IAAR;AACAjD,cAAQ2E,IAAR,GAAe,KAAKC,iBAAL,EAAf;AACA5E,cAAQ6E,SAAR,GAAoBP,KAApB;AACAtE,cAAQ8E,YAAR,GAAuB,YAAvB;AACA9E,cAAQsB,WAAR,GAAsB,CAAtB;AACA,WAAKyD,gBAAL,CAAsBZ,IAAtB,EAA4BK,EAA5B,EAAgCC,EAAhC,EAAoCL,QAApC;AACApE,cAAQsB,WAAR,GAAsBoD,KAAtB;AACA,WAAKM,aAAL,CAAmBb,IAAnB,EAAyBK,EAAzB,EAA6BC,EAA7B,EAAiCL,QAAjC;AACApE,cAAQmD,OAAR;AACA,WAAKjG,SAAL;AACD;AACF,GA1BD;;AA4BA;;;;;;;AAOAtB,SAAOK,SAAP,CAAiBgJ,gBAAjB,GAAoC,UAASd,IAAT,EAAe;AACjD,QAAInE,UAAU,KAAKxB,QAAnB;AACAwB,YAAQiD,IAAR;AACAjD,YAAQ2E,IAAR,GAAe,KAAKC,iBAAL,EAAf;AACA,QAAIzI,QAAQ6D,QAAQkF,WAAR,CAAoBf,IAApB,EAA0BhI,KAAtC;AACA6D,YAAQmD,OAAR;AACA,WAAOhH,KAAP;AACD,GAPD;;AASA;;;;;;;;AAQAP,SAAOK,SAAP,CAAiBkJ,UAAjB,GAA8B,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkB;AAC9C,QAAI,CAACF,KAAKC,CAAL,IAAUC,CAAX,KAAiB,KAAKnJ,KAAL,GAAa,CAA9B,IAAmC,KAAKC,MAAL,GAAc,CAArD,EAAwD;AACtD,UAAI4D,UAAU,KAAKxB,QAAnB;AACA,UAAI+G,YAAYvF,QAAQuC,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,KAAKpG,KAAhC,EAAuC,KAAKC,MAA5C,CAAhB;AACA,UAAIoJ,SAASD,UAAUjD,IAAvB;AACA,WAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAI+C,OAAOC,MAA3B,EAAmChD,KAAK,CAAxC,EAA2C;AACzC+C,eAAO/C,IAAI,CAAX,KAAiB2C,CAAjB;AACAI,eAAO/C,IAAI,CAAX,KAAiB4C,CAAjB;AACAG,eAAO/C,IAAI,CAAX,KAAiB6C,CAAjB;AACD;AACDtF,cAAQ0F,YAAR,CAAqBH,SAArB,EAAgC,CAAhC,EAAmC,CAAnC;AACA,WAAKrI,SAAL;AACD;AACF,GAbD;;AAeA;;;;;;AAMAtB,SAAOK,SAAP,CAAiB0J,SAAjB,GAA6B,UAASC,MAAT,EAAiB;AAC5C,aAASC,QAAT,CAAkBT,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACzB,UAAIQ,OAAOpJ,KAAKqJ,GAAL,CAASX,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CAAX;AACA,UAAIU,OAAOtJ,KAAKC,GAAL,CAASyI,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CAAX;AACA,UAAIxI,IAAI,CAAR;AACA,UAAImJ,IAAI,CAAR;AACA,UAAIC,IAAI,CAACJ,OAAOE,IAAR,IAAgB,CAAxB;AACA,UAAIG,QAAQH,OAAOF,IAAnB;;AAEA,UAAIK,QAAQ,CAAZ,EAAe;AACb,YAAIf,MAAMY,IAAV,EAAgB;AACdlJ,cAAI,MAAM,CAAC,CAACuI,IAAIC,CAAL,IAAUa,KAAV,GAAkB,CAAnB,IAAwB,CAA9B,CAAJ;AACD,SAFD,MAEO,IAAId,MAAMW,IAAV,EAAgB;AACrBlJ,cAAI,MAAM,CAACwI,IAAIF,CAAL,IAAUe,KAAV,GAAkB,CAAxB,CAAJ;AACD,SAFM,MAEA;AACLrJ,cAAI,MAAM,CAACsI,IAAIC,CAAL,IAAUc,KAAV,GAAkB,CAAxB,CAAJ;AACD;AACDF,YAAIE,SAAS,MAAMzJ,KAAK0J,GAAL,CAAS,IAAIF,CAAJ,GAAQ,GAAjB,CAAf,CAAJ;AACD;AACD,aAAO,CAACpJ,CAAD,EAAImJ,CAAJ,EAAOC,CAAP,CAAP;AACD;;AAED,aAASG,QAAT,CAAkBvJ,CAAlB,EAAqBmJ,CAArB,EAAwBC,CAAxB,EAA2B;AACzB,UAAII,IAAI,CAAC,MAAM5J,KAAK0J,GAAL,CAAS,IAAIF,CAAJ,GAAQ,GAAjB,CAAP,IAAgCD,CAAxC;AACA,UAAI7D,IAAIkE,KAAK,IAAI5J,KAAK0J,GAAL,CAAUtJ,IAAI,EAAL,GAAW,CAAX,GAAe,CAAxB,CAAT,CAAR;AACA,UAAIyJ,IAAIL,IAAII,IAAI,CAAhB;AACA,UAAIE,KAAKF,IAAIC,CAAb;AACA,UAAIE,KAAKrE,IAAImE,CAAb;;AAEA,UAAIzJ,IAAI,EAAR,EAAY;AACV,eAAO,CAAC0J,EAAD,EAAKC,EAAL,EAASF,CAAT,CAAP;AACD,OAFD,MAEO,IAAIzJ,IAAI,GAAR,EAAa;AAClB,eAAO,CAAC2J,EAAD,EAAKD,EAAL,EAASD,CAAT,CAAP;AACD,OAFM,MAEA,IAAIzJ,IAAI,GAAR,EAAa;AAClB,eAAO,CAACyJ,CAAD,EAAIC,EAAJ,EAAQC,EAAR,CAAP;AACD,OAFM,MAEA,IAAI3J,IAAI,GAAR,EAAa;AAClB,eAAO,CAACyJ,CAAD,EAAIE,EAAJ,EAAQD,EAAR,CAAP;AACD,OAFM,MAEA,IAAI1J,IAAI,GAAR,EAAa;AAClB,eAAO,CAAC2J,EAAD,EAAKF,CAAL,EAAQC,EAAR,CAAP;AACD,OAFM,MAEA;AACL,eAAO,CAACA,EAAD,EAAKD,CAAL,EAAQE,EAAR,CAAP;AACD;AACF;;AAED,QAAIb,UAAU,KAAKzJ,KAAL,GAAa,CAAvB,IAA4B,KAAKC,MAAL,GAAc,CAA9C,EAAiD;AAC/CwJ,eAAS,CAACA,SAAS,GAAT,GAAe,GAAhB,IAAuB,GAAhC;AACA,UAAI5F,UAAU,KAAKxB,QAAnB;AACA,UAAI+G,YAAYvF,QAAQuC,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,KAAKpG,KAAhC,EAAuC,KAAKC,MAA5C,CAAhB;AACA,UAAIoJ,SAASD,UAAUjD,IAAvB;AACA,WAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAI+C,OAAOC,MAA3B,EAAmChD,KAAK,CAAxC,EAA2C;AACzC,YAAIiE,MAAMb,SAASL,OAAO/C,IAAI,CAAX,CAAT,EAAwB+C,OAAO/C,IAAI,CAAX,CAAxB,EAAuC+C,OAAO/C,IAAI,CAAX,CAAvC,CAAV;AACA,YAAI3F,IAAI,CAAC4J,IAAI,CAAJ,IAASd,MAAV,IAAoB,GAA5B;AACA,YAAIK,IAAIS,IAAI,CAAJ,CAAR;AACA,YAAIR,IAAIQ,IAAI,CAAJ,CAAR;AACA,YAAIC,MAAMN,SAASvJ,CAAT,EAAYmJ,CAAZ,EAAeC,CAAf,CAAV;AACAV,eAAO/C,IAAI,CAAX,IAAgBkE,IAAI,CAAJ,CAAhB;AACAnB,eAAO/C,IAAI,CAAX,IAAgBkE,IAAI,CAAJ,CAAhB;AACAnB,eAAO/C,IAAI,CAAX,IAAgBkE,IAAI,CAAJ,CAAhB;AACD;AACD3G,cAAQ0F,YAAR,CAAqBH,SAArB,EAAgC,CAAhC,EAAmC,CAAnC;AACA,WAAKrI,SAAL;AACD;AACF,GA9DD;;AAgEA;;;;;AAKAtB,SAAOK,SAAP,CAAiB2K,IAAjB,GAAwB,YAAW;AACjC,SAAK,IAAInE,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAC1B,UAAI5F,IAAI,KAAKV,KAAb;AACA,UAAIW,IAAI,KAAKV,MAAb;AACA,UAAImE,SAAS,KAAKvD,OAAlB;AACA,UAAIgD,UAAU,KAAKxB,QAAnB;AACA,UAAIqI,aAAavK,SAASC,aAAT,CAAuB,QAAvB,CAAjB;AACA,UAAIuK,cAAcD,WAAWpK,UAAX,CAAsB,IAAtB,CAAlB;AACAoK,iBAAW1K,KAAX,GAAmBU,IAAI,CAAvB;AACAgK,iBAAWzK,MAAX,GAAoBU,IAAI,CAAxB;AACAgK,kBAAY7J,SAAZ,CAAsBsD,MAAtB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC1D,CAApC,EAAuCC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgDD,CAAhD,EAAmDC,CAAnD;AACAgK,kBAAY7J,SAAZ,CAAsBsD,MAAtB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC1D,CAApC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgDA,CAAhD,EAAmD,CAAnD;AACAiK,kBAAY7J,SAAZ,CAAsBsD,MAAtB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuCzD,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmDA,CAAnD;AACAgK,kBAAY7J,SAAZ,CAAsBsD,MAAtB,EAA8B,CAA9B,EAAiCzD,IAAI,CAArC,EAAwCD,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiDC,IAAI,CAArD,EAAwDD,CAAxD,EAA2D,CAA3D;AACAiK,kBAAY7J,SAAZ,CAAsBsD,MAAtB,EAA8B1D,IAAI,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2CC,CAA3C,EAA8CD,IAAI,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,EAA2DC,CAA3D;AACAkD,cAAQiD,IAAR;AACAjD,cAAQkD,SAAR,GAAoB,OAApB;AACAlD,cAAQ+C,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBlG,CAAvB,EAA0BC,CAA1B;AACAkD,cAAQiC,wBAAR,GAAmC,SAAnC;AACAjC,cAAQsB,WAAR,GAAsB,IAAI,CAA1B;AACA,WAAK,IAAIe,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAC1B,aAAK,IAAID,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAC1BpC,kBAAQ/C,SAAR,CAAkB4J,UAAlB,EAA8BzE,CAA9B,EAAiCC,CAAjC,EAAoCxF,CAApC,EAAuCC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgDD,CAAhD,EAAmDC,CAAnD;AACD;AACF;AACDkD,cAAQmD,OAAR;AACD;AACD,SAAKjG,SAAL;AACD,GA5BD;;AA8BA;;;;;;AAMAtB,SAAOK,SAAP,CAAiB8K,eAAjB,GAAmC,UAASC,OAAT,EAAkB;AACnD,QAAI,CAAC,KAAKlG,OAAL,EAAL,EAAqB;AACnB,WAAKhC,cAAL,CAAoBV,IAApB,CAAyB4I,OAAzB;AACD,KAFD,MAEO;AACLA,cAAQ,IAAR;AACD;AACF,GAND;;AAQA;;;;AAIApL,SAAOK,SAAP,CAAiB2I,iBAAjB,GAAqC,YAAW;AAC9C,WACE,CAAC,KAAKxF,UAAL,GAAkB,SAAlB,GAA8B,EAA/B,IAAqC,KAAKD,QAA1C,GAAqD,KAArD,GAA6D,KAAKD,QADpE;AAGD,GAJD;;AAMA;;;;;;;;AAQAtD,SAAOK,SAAP,CAAiB8I,gBAAjB,GAAoC,UAASZ,IAAT,EAAeK,EAAf,EAAmBC,EAAnB,EAAuBL,QAAvB,EAAiC;AACnE,QAAIpE,UAAU,KAAKxB,QAAnB;AACAwB,YAAQiH,WAAR,GAAsB,KAAK3H,YAA3B;AACAU,YAAQkH,SAAR,GAAoB,KAAK3H,YAAzB;AACAS,YAAQmH,QAAR,GAAmB,OAAnB;AACAnH,YAAQoH,UAAR,CAAmBjD,IAAnB,EAAyBK,EAAzB,EAA6BC,EAA7B,EAAiCL,QAAjC;AACD,GAND;;AAQA;;;;;;;;AAQAxI,SAAOK,SAAP,CAAiB+I,aAAjB,GAAiC,UAASb,IAAT,EAAeK,EAAf,EAAmBC,EAAnB,EAAuBL,QAAvB,EAAiC;AAChE,QAAIpE,UAAU,KAAKxB,QAAnB;AACAwB,YAAQkD,SAAR,GAAoB,KAAK7D,SAAzB;AACAW,YAAQqH,QAAR,CAAiBlD,IAAjB,EAAuBK,EAAvB,EAA2BC,EAA3B,EAA+BL,QAA/B;AACD,GAJD;;AAMA;;;;AAIAxI,SAAOK,SAAP,CAAiBqL,OAAjB,GAA2B,YAAW;AACpC,SAAK1K,MAAL,CAAY2K,mBAAZ,CAAgC,MAAhC,EAAwC,KAAKpJ,aAA7C;AACA,SAAKvB,MAAL,CAAY2K,mBAAZ,CAAgC,OAAhC,EAAyC,KAAKrJ,cAA9C;;AAEA,SAAKO,YAAL;;AAEA,YAAQ,KAAKM,aAAb;AACE,WAAK,YAAL;AACE,aAAKA,aAAL,GAAqB,kBAArB;AACA,YAAI,KAAKC,mBAAT,EAA8B;AAC5B,eAAKwI,MAAL;AACD,SAFD,MAEO;AACL,eAAKzI,aAAL,GAAqB,QAArB;AACA,eAAKjB,iBAAL;AACD;AACD;;AAEF,WAAK,YAAL;AACE2J,eAAOC,GAAP,CAAWC,eAAX,CAA2B,KAAK/K,MAAL,CAAYmB,GAAvC;AACA,aAAKgB,aAAL,GAAqB,kBAArB;AACA,YAAI,KAAKC,mBAAT,EAA8B;AAC5B,eAAKwI,MAAL;AACD,SAFD,MAEO;AACL,eAAKzI,aAAL,GAAqB,QAArB;AACA,eAAKjB,iBAAL;AACD;AACD;AApBJ;AAsBD,GA5BD;;AA8BAlC,SAAOK,SAAP,CAAiBuL,MAAjB,GAA0B,YAAW;AACnC,YAAQ,KAAKzI,aAAb;AACE,WAAK,kBAAL;AACA,WAAK,kBAAL;AACE,aAAKA,aAAL,GAAqB,QAArB;;AAEA,YAAI,CAAC,KAAK1C,QAAV,EAAoB,KAAKU,kBAAL,CAAwB,KAAKH,MAA7B;AACpB,aAAKM,SAAL;AACA,aAAK0K,kBAAL;AACA;;AAEF,WAAK,YAAL;AACA,WAAK,YAAL;AACE,aAAK5I,mBAAL,GAA2B,IAA3B;AACA,YAAI,CAAC,KAAK6I,OAAV,EAAmB;AACjB,eAAKA,OAAL,GAAeC,gBAAgBC,YAAhB,CACb,KAAKnJ,IADQ,EAEb,KAAKgB,aAAL,CAAmBoI,IAAnB,CAAwB,IAAxB,EAA8B,KAAKpJ,IAAnC,CAFa,EAGb,KAAKqJ,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAHa,CAAf;AAKA,eAAKpL,MAAL,CAAY2K,mBAAZ,CAAgC,OAAhC,EAAyC,KAAKrJ,cAA9C;AACA,eAAKtB,MAAL,CAAYsL,gBAAZ,CACE,OADF,EAEG,KAAKhK,cAAL,GAAsB,KAAK2J,OAF9B;AAID;AACD;;AAEF,WAAK,SAAL;AACA,WAAK,QAAL;AACA,WAAK,OAAL;AACE,aAAK7I,mBAAL,GAA2B,IAA3B;AACA,aAAKY,aAAL,CAAmB,KAAKhB,IAAxB;AACA;AAhCJ;AAkCD,GAnCD;;AAqCA;;;;AAIAhD,SAAOK,SAAP,CAAiB2L,kBAAjB,GAAsC,YAAW;AAC/C,WAAO,KAAK9I,cAAL,CAAoB2G,MAApB,GAA6B,CAApC,EAAuC;AACrC,UAAI0C,WAAW,KAAKrJ,cAAL,CAAoBsJ,KAApB,EAAf;AACAD,eAAS,IAAT;AACD;AACF,GALD;;AAOA;;;;AAIAvM,SAAOK,SAAP,CAAiBgM,QAAjB,GAA4B,YAAW;AACrC,SAAKrL,MAAL,CAAY2K,mBAAZ,CAAgC,MAAhC,EAAwC,KAAKpJ,aAA7C;AACA,SAAKvB,MAAL,CAAY2K,mBAAZ,CAAgC,OAAhC,EAAyC,KAAKrJ,cAA9C;AACA,SAAKa,aAAL,GAAqB,OAArB;AACD,GAJD;;AAMA;;;;AAIAnD,SAAOK,SAAP,CAAiBiB,SAAjB,GAA6B,YAAW;AACtC,SAAKmL,MAAL,GAAc,IAAd;AACD,GAFD;;AAIA;;;;AAIAzM,SAAOK,SAAP,CAAiBqM,UAAjB,GAA8B,YAAW;AACvC,QAAI,KAAKD,MAAT,EAAiB;AACf,WAAK5K,YAAL,CAAkB8K,MAAlB;AACA,WAAKF,MAAL,GAAc,KAAd;AACD;AACF,GALD;;AAOAzM,SAAO4M,OAAP,GAAiB,UAAS/I,GAAT,EAAc;AAC7B,QAAIC,SAASrB,OAAOsB,MAAP,CAAc/D,OAAOK,SAArB,CAAb;AACAyD,WAAOf,MAAP,GAAgB,IAAhB;AACAe,WAAO7D,UAAP;;AAEA6D,WAAOd,IAAP,GAAca,GAAd;AACAC,WAAOX,aAAP,GAAuB,SAAvB;;AAEA,WAAOW,MAAP;AACD,GATD;;AAWA9D,SAAOK,SAAP,CAAiB2D,aAAjB,GAAiC,UAASH,GAAT,EAAc;AAC7C,QAAI7D,OAAOI,YAAP,CAAoByJ,MAApB,KAA+B,CAAnC,EAAsC;AACpC,WAAK7I,MAAL,GAAchB,OAAOI,YAAP,CAAoByM,GAApB,EAAd;AACD,KAFD,MAEO;AACL,WAAK7L,MAAL,GAAc,IAAI8L,KAAJ,EAAd;AACD;;AAED,QAAI,KAAK1J,mBAAL,IAA4B,CAAC,KAAK6I,OAAtC,EAA+C;AAC7C,WAAKA,OAAL,GAAeC,gBAAgBC,YAAhB,CACbtI,GADa,EAEb,KAAKG,aAAL,CAAmBoI,IAAnB,CAAwB,IAAxB,EAA8BvI,GAA9B,CAFa,EAGb,KAAKwI,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAHa,CAAf;AAKD;;AAED,SAAKpL,MAAL,GAAc,IAAI8L,KAAJ,EAAd;AACA,SAAK9J,IAAL,GAAYa,GAAZ;AACA,SAAKV,aAAL,GAAqB,YAArB;;AAEA,QAAI,CAAC4J,UAAUC,cAAV,CAAyBnJ,GAAzB,CAAD,IAAkCkJ,UAAUE,kBAAhD,EAAoE;AAClE,WAAK9J,aAAL,GAAqB,YAArB;AACA4J,gBAAUG,UAAV,CAAqBrJ,GAArB,EAA0B,IAA1B;AACD,KAHD,MAGO;AACL,WAAK7C,MAAL,CAAYmB,GAAZ,GAAkB0B,GAAlB;;AAEA,WAAK7C,MAAL,CAAYsL,gBAAZ,CACE,MADF,EAEG,KAAK/J,aAAL,GAAqBvC,OAAOK,SAAP,CAAiBqL,OAAjB,CAAyBU,IAAzB,CAA8B,IAA9B,CAFxB;AAIA,WAAKpL,MAAL,CAAYsL,gBAAZ,CACE,OADF,EAEG,KAAKhK,cAAL,GACC,KAAK2J,OAAL,IAAgBjM,OAAOK,SAAP,CAAiBgM,QAAjB,CAA0BD,IAA1B,CAA+B,IAA/B,CAHpB;AAKD;AACF,GAnCD;;AAqCApM,SAAOK,SAAP,CAAiB8M,aAAjB,GAAiC,YAAW;AAC1C,WAAO,EAAE,KAAK/J,mBAAL,IAA4B,KAAK8B,OAAL,EAA9B,CAAP;AACD,GAFD;;AAIAlF,SAAOK,SAAP,CAAiB+M,cAAjB,GAAkC,YAAW;AAC3C,WACE,KAAKjK,aAAL,KAAuB,SAAvB,IACA,KAAKA,aAAL,KAAuB,YADvB,IAEA,KAAKA,aAAL,KAAuB,YAHzB;AAKD,GAND;;AAQAnD,SAAOK,SAAP,CAAiBgN,YAAjB,GAAgC,YAAW;AACzC,QAAI,KAAKlK,aAAL,KAAuB,SAA3B,EAAsC;AACpC,WAAKC,mBAAL,GAA2B,KAA3B;AACA,WAAKY,aAAL,CAAmB,KAAKhB,IAAxB;AACD;AACF,GALD","file":"bitmap.js","sourcesContent":["//-----------------------------------------------------------------------------\r\n/**\r\n* The basic object that represents an image.\r\n*\r\n* @class Bitmap\r\n* @constructor\r\n* @param {Number} width The width of the bitmap\r\n* @param {Number} height The height of the bitmap\r\n*/\r\nexport default function Bitmap() {\r\n  this.initialize.apply(this, arguments)\r\n}\r\n\r\n//for iOS. img consumes memory. so reuse it.\r\nBitmap._reuseImages = []\r\n\r\n/**\r\n* Bitmap states(Bitmap._loadingState):\r\n*\r\n* none:\r\n* Empty Bitmap\r\n*\r\n* pending:\r\n* Url requested, but pending to load until startRequest called\r\n*\r\n* purged:\r\n* Url request completed and purged.\r\n*\r\n* requesting:\r\n* Requesting supplied URI now.\r\n*\r\n* requestCompleted:\r\n* Request completed\r\n*\r\n* decrypting:\r\n* requesting encrypted data from supplied URI or decrypting it.\r\n*\r\n* decryptCompleted:\r\n* Decrypt completed\r\n*\r\n* loaded:\r\n* loaded. isReady() === true, so It's usable.\r\n*\r\n* error:\r\n* error occurred\r\n*\r\n*/\r\n\r\nBitmap.prototype._createCanvas = function(width, height) {\r\n  this.__canvas = this.__canvas || document.createElement('canvas')\r\n  this.__context = this.__canvas.getContext('2d')\r\n\r\n  this.__canvas.width = Math.max(width || 0, 1)\r\n  this.__canvas.height = Math.max(height || 0, 1)\r\n\r\n  if (this._image) {\r\n    var w = Math.max(this._image.width || 0, 1)\r\n    var h = Math.max(this._image.height || 0, 1)\r\n    this.__canvas.width = w\r\n    this.__canvas.height = h\r\n    this._createBaseTexture(this._canvas)\r\n\r\n    this.__context.drawImage(this._image, 0, 0)\r\n  }\r\n\r\n  this._setDirty()\r\n}\r\n\r\nBitmap.prototype._createBaseTexture = function(source) {\r\n  this.__baseTexture = new PIXI.BaseTexture(source)\r\n  this.__baseTexture.mipmap = false\r\n  this.__baseTexture.width = source.width\r\n  this.__baseTexture.height = source.height\r\n\r\n  if (this._smooth) {\r\n    this._baseTexture.scaleMode = PIXI.SCALE_MODES.LINEAR\r\n  } else {\r\n    this._baseTexture.scaleMode = PIXI.SCALE_MODES.NEAREST\r\n  }\r\n}\r\n\r\nBitmap.prototype._clearImgInstance = function() {\r\n  this._image.src = ''\r\n  this._image.onload = null\r\n  this._image.onerror = null\r\n  this._errorListener = null\r\n  this._loadListener = null\r\n\r\n  Bitmap._reuseImages.push(this._image)\r\n  this._image = null\r\n}\r\n\r\n//\r\n//We don't want to waste memory, so creating canvas is deferred.\r\n//\r\nObject.defineProperties(Bitmap.prototype, {\r\n  _canvas: {\r\n    get: function() {\r\n      if (!this.__canvas) this._createCanvas()\r\n      return this.__canvas\r\n    }\r\n  },\r\n  _context: {\r\n    get: function() {\r\n      if (!this.__context) this._createCanvas()\r\n      return this.__context\r\n    }\r\n  },\r\n\r\n  _baseTexture: {\r\n    get: function() {\r\n      if (!this.__baseTexture)\r\n        this._createBaseTexture(this._image || this.__canvas)\r\n      return this.__baseTexture\r\n    }\r\n  }\r\n})\r\n\r\nBitmap.prototype._renewCanvas = function() {\r\n  var newImage = this._image\r\n  if (\r\n    newImage &&\r\n    this.__canvas &&\r\n    (this.__canvas.width < newImage.width ||\r\n      this.__canvas.height < newImage.height)\r\n  ) {\r\n    this._createCanvas()\r\n  }\r\n}\r\n\r\nBitmap.prototype.initialize = function(width, height) {\r\n  if (!this._defer) {\r\n    this._createCanvas(width, height)\r\n  }\r\n\r\n  this._image = null\r\n  this._url = ''\r\n  this._paintOpacity = 255\r\n  this._smooth = false\r\n  this._loadListeners = []\r\n  this._loadingState = 'none'\r\n  this._decodeAfterRequest = false\r\n\r\n  /**\r\n   * Cache entry, for images. In all cases _url is the same as cacheEntry.key\r\n   * @type CacheEntry\r\n   */\r\n  this.cacheEntry = null\r\n\r\n  /**\r\n   * The face name of the font.\r\n   *\r\n   * @property fontFace\r\n   * @type String\r\n   */\r\n  this.fontFace = 'GameFont'\r\n\r\n  /**\r\n   * The size of the font in pixels.\r\n   *\r\n   * @property fontSize\r\n   * @type Number\r\n   */\r\n  this.fontSize = 28\r\n\r\n  /**\r\n   * Whether the font is italic.\r\n   *\r\n   * @property fontItalic\r\n   * @type Boolean\r\n   */\r\n  this.fontItalic = false\r\n\r\n  /**\r\n   * The color of the text in CSS format.\r\n   *\r\n   * @property textColor\r\n   * @type String\r\n   */\r\n  this.textColor = '#ffffff'\r\n\r\n  /**\r\n   * The color of the outline of the text in CSS format.\r\n   *\r\n   * @property outlineColor\r\n   * @type String\r\n   */\r\n  this.outlineColor = 'rgba(0, 0, 0, 0.5)'\r\n\r\n  /**\r\n   * The width of the outline of the text.\r\n   *\r\n   * @property outlineWidth\r\n   * @type Number\r\n   */\r\n  this.outlineWidth = 4\r\n}\r\n\r\n/**\r\n* Loads a image file and returns a new bitmap object.\r\n*\r\n* @static\r\n* @method load\r\n* @param {String} url The image url of the texture\r\n* @return Bitmap\r\n*/\r\nBitmap.load = function(url) {\r\n  var bitmap = Object.create(Bitmap.prototype)\r\n  bitmap._defer = true\r\n  bitmap.initialize()\r\n\r\n  bitmap._decodeAfterRequest = true\r\n  bitmap._requestImage(url)\r\n\r\n  return bitmap\r\n}\r\n\r\n/**\r\n* Takes a snapshot of the game screen and returns a new bitmap object.\r\n*\r\n* @static\r\n* @method snap\r\n* @param {Stage} stage The stage object\r\n* @return Bitmap\r\n*/\r\nBitmap.snap = function(stage) {\r\n  var width = Graphics.width\r\n  var height = Graphics.height\r\n  var bitmap = new Bitmap(width, height)\r\n  var context = bitmap._context\r\n  var renderTexture = PIXI.RenderTexture.create(width, height)\r\n  if (stage) {\r\n    Graphics._renderer.render(stage, renderTexture)\r\n    stage.worldTransform.identity()\r\n    var canvas = null\r\n    if (Graphics.isWebGL()) {\r\n      canvas = Graphics._renderer.extract.canvas(renderTexture)\r\n    } else {\r\n      canvas = renderTexture.baseTexture._canvasRenderTarget.canvas\r\n    }\r\n    context.drawImage(canvas, 0, 0)\r\n  } else {\r\n  }\r\n  renderTexture.destroy({ destroyBase: true })\r\n  bitmap._setDirty()\r\n  return bitmap\r\n}\r\n\r\n/**\r\n* Checks whether the bitmap is ready to render.\r\n*\r\n* @method isReady\r\n* @return {Boolean} True if the bitmap is ready to render\r\n*/\r\nBitmap.prototype.isReady = function() {\r\n  return this._loadingState === 'loaded' || this._loadingState === 'none'\r\n}\r\n\r\n/**\r\n* Checks whether a loading error has occurred.\r\n*\r\n* @method isError\r\n* @return {Boolean} True if a loading error has occurred\r\n*/\r\nBitmap.prototype.isError = function() {\r\n  return this._loadingState === 'error'\r\n}\r\n\r\n/**\r\n* touch the resource\r\n* @method touch\r\n*/\r\nBitmap.prototype.touch = function() {\r\n  if (this.cacheEntry) {\r\n    this.cacheEntry.touch()\r\n  }\r\n}\r\n\r\n/**\r\n* [read-only] The url of the image file.\r\n*\r\n* @property url\r\n* @type String\r\n*/\r\nObject.defineProperty(Bitmap.prototype, 'url', {\r\n  get: function() {\r\n    return this._url\r\n  },\r\n  configurable: true\r\n})\r\n\r\n/**\r\n* [read-only] The base texture that holds the image.\r\n*\r\n* @property baseTexture\r\n* @type PIXI.BaseTexture\r\n*/\r\nObject.defineProperty(Bitmap.prototype, 'baseTexture', {\r\n  get: function() {\r\n    return this._baseTexture\r\n  },\r\n  configurable: true\r\n})\r\n\r\n/**\r\n* [read-only] The bitmap canvas.\r\n*\r\n* @property canvas\r\n* @type HTMLCanvasElement\r\n*/\r\nObject.defineProperty(Bitmap.prototype, 'canvas', {\r\n  get: function() {\r\n    return this._canvas\r\n  },\r\n  configurable: true\r\n})\r\n\r\n/**\r\n* [read-only] The 2d context of the bitmap canvas.\r\n*\r\n* @property context\r\n* @type CanvasRenderingContext2D\r\n*/\r\nObject.defineProperty(Bitmap.prototype, 'context', {\r\n  get: function() {\r\n    return this._context\r\n  },\r\n  configurable: true\r\n})\r\n\r\n/**\r\n* [read-only] The width of the bitmap.\r\n*\r\n* @property width\r\n* @type Number\r\n*/\r\nObject.defineProperty(Bitmap.prototype, 'width', {\r\n  get: function() {\r\n    if (this.isReady()) {\r\n      return this._image ? this._image.width : this._canvas.width\r\n    }\r\n\r\n    return 0\r\n  },\r\n  configurable: true\r\n})\r\n\r\n/**\r\n* [read-only] The height of the bitmap.\r\n*\r\n* @property height\r\n* @type Number\r\n*/\r\nObject.defineProperty(Bitmap.prototype, 'height', {\r\n  get: function() {\r\n    if (this.isReady()) {\r\n      return this._image ? this._image.height : this._canvas.height\r\n    }\r\n\r\n    return 0\r\n  },\r\n  configurable: true\r\n})\r\n\r\n/**\r\n* [read-only] The rectangle of the bitmap.\r\n*\r\n* @property rect\r\n* @type Rectangle\r\n*/\r\nObject.defineProperty(Bitmap.prototype, 'rect', {\r\n  get: function() {\r\n    return new Rectangle(0, 0, this.width, this.height)\r\n  },\r\n  configurable: true\r\n})\r\n\r\n/**\r\n* Whether the smooth scaling is applied.\r\n*\r\n* @property smooth\r\n* @type Boolean\r\n*/\r\nObject.defineProperty(Bitmap.prototype, 'smooth', {\r\n  get: function() {\r\n    return this._smooth\r\n  },\r\n  set: function(value) {\r\n    if (this._smooth !== value) {\r\n      this._smooth = value\r\n      if (this.__baseTexture) {\r\n        if (this._smooth) {\r\n          this._baseTexture.scaleMode = PIXI.SCALE_MODES.LINEAR\r\n        } else {\r\n          this._baseTexture.scaleMode = PIXI.SCALE_MODES.NEAREST\r\n        }\r\n      }\r\n    }\r\n  },\r\n  configurable: true\r\n})\r\n\r\n/**\r\n* The opacity of the drawing object in the range (0, 255).\r\n*\r\n* @property paintOpacity\r\n* @type Number\r\n*/\r\nObject.defineProperty(Bitmap.prototype, 'paintOpacity', {\r\n  get: function() {\r\n    return this._paintOpacity\r\n  },\r\n  set: function(value) {\r\n    if (this._paintOpacity !== value) {\r\n      this._paintOpacity = value\r\n      this._context.globalAlpha = this._paintOpacity / 255\r\n    }\r\n  },\r\n  configurable: true\r\n})\r\n\r\n/**\r\n* Resizes the bitmap.\r\n*\r\n* @method resize\r\n* @param {Number} width The new width of the bitmap\r\n* @param {Number} height The new height of the bitmap\r\n*/\r\nBitmap.prototype.resize = function(width, height) {\r\n  width = Math.max(width || 0, 1)\r\n  height = Math.max(height || 0, 1)\r\n  this._canvas.width = width\r\n  this._canvas.height = height\r\n  this._baseTexture.width = width\r\n  this._baseTexture.height = height\r\n}\r\n\r\n/**\r\n* Performs a block transfer.\r\n*\r\n* @method blt\r\n* @param {Bitmap} source The bitmap to draw\r\n* @param {Number} sx The x coordinate in the source\r\n* @param {Number} sy The y coordinate in the source\r\n* @param {Number} sw The width of the source image\r\n* @param {Number} sh The height of the source image\r\n* @param {Number} dx The x coordinate in the destination\r\n* @param {Number} dy The y coordinate in the destination\r\n* @param {Number} [dw=sw] The width to draw the image in the destination\r\n* @param {Number} [dh=sh] The height to draw the image in the destination\r\n*/\r\nBitmap.prototype.blt = function(source, sx, sy, sw, sh, dx, dy, dw, dh) {\r\n  dw = dw || sw\r\n  dh = dh || sh\r\n  if (\r\n    sx >= 0 &&\r\n    sy >= 0 &&\r\n    sw > 0 &&\r\n    sh > 0 &&\r\n    dw > 0 &&\r\n    dh > 0 &&\r\n    sx + sw <= source.width &&\r\n    sy + sh <= source.height\r\n  ) {\r\n    this._context.globalCompositeOperation = 'source-over'\r\n    this._context.drawImage(source._canvas, sx, sy, sw, sh, dx, dy, dw, dh)\r\n    this._setDirty()\r\n  }\r\n}\r\n\r\n/**\r\n* Performs a block transfer, using assumption that original image was not modified (no hue)\r\n*\r\n* @method blt\r\n* @param {Bitmap} source The bitmap to draw\r\n* @param {Number} sx The x coordinate in the source\r\n* @param {Number} sy The y coordinate in the source\r\n* @param {Number} sw The width of the source image\r\n* @param {Number} sh The height of the source image\r\n* @param {Number} dx The x coordinate in the destination\r\n* @param {Number} dy The y coordinate in the destination\r\n* @param {Number} [dw=sw] The width to draw the image in the destination\r\n* @param {Number} [dh=sh] The height to draw the image in the destination\r\n*/\r\nBitmap.prototype.bltImage = function(source, sx, sy, sw, sh, dx, dy, dw, dh) {\r\n  dw = dw || sw\r\n  dh = dh || sh\r\n  if (\r\n    sx >= 0 &&\r\n    sy >= 0 &&\r\n    sw > 0 &&\r\n    sh > 0 &&\r\n    dw > 0 &&\r\n    dh > 0 &&\r\n    sx + sw <= source.width &&\r\n    sy + sh <= source.height\r\n  ) {\r\n    this._context.globalCompositeOperation = 'source-over'\r\n    this._context.drawImage(source._image, sx, sy, sw, sh, dx, dy, dw, dh)\r\n    this._setDirty()\r\n  }\r\n}\r\n\r\n/**\r\n* Returns pixel color at the specified point.\r\n*\r\n* @method getPixel\r\n* @param {Number} x The x coordinate of the pixel in the bitmap\r\n* @param {Number} y The y coordinate of the pixel in the bitmap\r\n* @return {String} The pixel color (hex format)\r\n*/\r\nBitmap.prototype.getPixel = function(x, y) {\r\n  var data = this._context.getImageData(x, y, 1, 1).data\r\n  var result = '#'\r\n  for (var i = 0; i < 3; i++) {\r\n    result += data[i].toString(16).padZero(2)\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n* Returns alpha pixel value at the specified point.\r\n*\r\n* @method getAlphaPixel\r\n* @param {Number} x The x coordinate of the pixel in the bitmap\r\n* @param {Number} y The y coordinate of the pixel in the bitmap\r\n* @return {String} The alpha value\r\n*/\r\nBitmap.prototype.getAlphaPixel = function(x, y) {\r\n  var data = this._context.getImageData(x, y, 1, 1).data\r\n  return data[3]\r\n}\r\n\r\n/**\r\n* Clears the specified rectangle.\r\n*\r\n* @method clearRect\r\n* @param {Number} x The x coordinate for the upper-left corner\r\n* @param {Number} y The y coordinate for the upper-left corner\r\n* @param {Number} width The width of the rectangle to clear\r\n* @param {Number} height The height of the rectangle to clear\r\n*/\r\nBitmap.prototype.clearRect = function(x, y, width, height) {\r\n  this._context.clearRect(x, y, width, height)\r\n  this._setDirty()\r\n}\r\n\r\n/**\r\n* Clears the entire bitmap.\r\n*\r\n* @method clear\r\n*/\r\nBitmap.prototype.clear = function() {\r\n  this.clearRect(0, 0, this.width, this.height)\r\n}\r\n\r\n/**\r\n* Fills the specified rectangle.\r\n*\r\n* @method fillRect\r\n* @param {Number} x The x coordinate for the upper-left corner\r\n* @param {Number} y The y coordinate for the upper-left corner\r\n* @param {Number} width The width of the rectangle to fill\r\n* @param {Number} height The height of the rectangle to fill\r\n* @param {String} color The color of the rectangle in CSS format\r\n*/\r\nBitmap.prototype.fillRect = function(x, y, width, height, color) {\r\n  var context = this._context\r\n  context.save()\r\n  context.fillStyle = color\r\n  context.fillRect(x, y, width, height)\r\n  context.restore()\r\n  this._setDirty()\r\n}\r\n\r\n/**\r\n* Fills the entire bitmap.\r\n*\r\n* @method fillAll\r\n* @param {String} color The color of the rectangle in CSS format\r\n*/\r\nBitmap.prototype.fillAll = function(color) {\r\n  this.fillRect(0, 0, this.width, this.height, color)\r\n}\r\n\r\n/**\r\n* Draws the rectangle with a gradation.\r\n*\r\n* @method gradientFillRect\r\n* @param {Number} x The x coordinate for the upper-left corner\r\n* @param {Number} y The y coordinate for the upper-left corner\r\n* @param {Number} width The width of the rectangle to fill\r\n* @param {Number} height The height of the rectangle to fill\r\n* @param {String} color1 The gradient starting color\r\n* @param {String} color2 The gradient ending color\r\n* @param {Boolean} vertical Wether the gradient should be draw as vertical or not\r\n*/\r\nBitmap.prototype.gradientFillRect = function(\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  color1,\r\n  color2,\r\n  vertical\r\n) {\r\n  var context = this._context\r\n  var grad\r\n  if (vertical) {\r\n    grad = context.createLinearGradient(x, y, x, y + height)\r\n  } else {\r\n    grad = context.createLinearGradient(x, y, x + width, y)\r\n  }\r\n  grad.addColorStop(0, color1)\r\n  grad.addColorStop(1, color2)\r\n  context.save()\r\n  context.fillStyle = grad\r\n  context.fillRect(x, y, width, height)\r\n  context.restore()\r\n  this._setDirty()\r\n}\r\n\r\n/**\r\n* Draw a bitmap in the shape of a circle\r\n*\r\n* @method drawCircle\r\n* @param {Number} x The x coordinate based on the circle center\r\n* @param {Number} y The y coordinate based on the circle center\r\n* @param {Number} radius The radius of the circle\r\n* @param {String} color The color of the circle in CSS format\r\n*/\r\nBitmap.prototype.drawCircle = function(x, y, radius, color) {\r\n  var context = this._context\r\n  context.save()\r\n  context.fillStyle = color\r\n  context.beginPath()\r\n  context.arc(x, y, radius, 0, Math.PI * 2, false)\r\n  context.fill()\r\n  context.restore()\r\n  this._setDirty()\r\n}\r\n\r\n/**\r\n* Draws the outline text to the bitmap.\r\n*\r\n* @method drawText\r\n* @param {String} text The text that will be drawn\r\n* @param {Number} x The x coordinate for the left of the text\r\n* @param {Number} y The y coordinate for the top of the text\r\n* @param {Number} maxWidth The maximum allowed width of the text\r\n* @param {Number} lineHeight The height of the text line\r\n* @param {String} align The alignment of the text\r\n*/\r\nBitmap.prototype.drawText = function(text, x, y, maxWidth, lineHeight, align) {\r\n  // Note: Firefox has a bug with textBaseline: Bug 737852\r\n  //       So we use 'alphabetic' here.\r\n  if (text !== undefined) {\r\n    var tx = x\r\n    var ty = y + lineHeight - (lineHeight - this.fontSize * 0.7) / 2\r\n    var context = this._context\r\n    var alpha = context.globalAlpha\r\n    maxWidth = maxWidth || 0xffffffff\r\n    if (align === 'center') {\r\n      tx += maxWidth / 2\r\n    }\r\n    if (align === 'right') {\r\n      tx += maxWidth\r\n    }\r\n    context.save()\r\n    context.font = this._makeFontNameText()\r\n    context.textAlign = align\r\n    context.textBaseline = 'alphabetic'\r\n    context.globalAlpha = 1\r\n    this._drawTextOutline(text, tx, ty, maxWidth)\r\n    context.globalAlpha = alpha\r\n    this._drawTextBody(text, tx, ty, maxWidth)\r\n    context.restore()\r\n    this._setDirty()\r\n  }\r\n}\r\n\r\n/**\r\n* Returns the width of the specified text.\r\n*\r\n* @method measureTextWidth\r\n* @param {String} text The text to be measured\r\n* @return {Number} The width of the text in pixels\r\n*/\r\nBitmap.prototype.measureTextWidth = function(text) {\r\n  var context = this._context\r\n  context.save()\r\n  context.font = this._makeFontNameText()\r\n  var width = context.measureText(text).width\r\n  context.restore()\r\n  return width\r\n}\r\n\r\n/**\r\n* Changes the color tone of the entire bitmap.\r\n*\r\n* @method adjustTone\r\n* @param {Number} r The red strength in the range (-255, 255)\r\n* @param {Number} g The green strength in the range (-255, 255)\r\n* @param {Number} b The blue strength in the range (-255, 255)\r\n*/\r\nBitmap.prototype.adjustTone = function(r, g, b) {\r\n  if ((r || g || b) && this.width > 0 && this.height > 0) {\r\n    var context = this._context\r\n    var imageData = context.getImageData(0, 0, this.width, this.height)\r\n    var pixels = imageData.data\r\n    for (var i = 0; i < pixels.length; i += 4) {\r\n      pixels[i + 0] += r\r\n      pixels[i + 1] += g\r\n      pixels[i + 2] += b\r\n    }\r\n    context.putImageData(imageData, 0, 0)\r\n    this._setDirty()\r\n  }\r\n}\r\n\r\n/**\r\n* Rotates the hue of the entire bitmap.\r\n*\r\n* @method rotateHue\r\n* @param {Number} offset The hue offset in 360 degrees\r\n*/\r\nBitmap.prototype.rotateHue = function(offset) {\r\n  function rgbToHsl(r, g, b) {\r\n    var cmin = Math.min(r, g, b)\r\n    var cmax = Math.max(r, g, b)\r\n    var h = 0\r\n    var s = 0\r\n    var l = (cmin + cmax) / 2\r\n    var delta = cmax - cmin\r\n\r\n    if (delta > 0) {\r\n      if (r === cmax) {\r\n        h = 60 * (((g - b) / delta + 6) % 6)\r\n      } else if (g === cmax) {\r\n        h = 60 * ((b - r) / delta + 2)\r\n      } else {\r\n        h = 60 * ((r - g) / delta + 4)\r\n      }\r\n      s = delta / (255 - Math.abs(2 * l - 255))\r\n    }\r\n    return [h, s, l]\r\n  }\r\n\r\n  function hslToRgb(h, s, l) {\r\n    var c = (255 - Math.abs(2 * l - 255)) * s\r\n    var x = c * (1 - Math.abs((h / 60) % 2 - 1))\r\n    var m = l - c / 2\r\n    var cm = c + m\r\n    var xm = x + m\r\n\r\n    if (h < 60) {\r\n      return [cm, xm, m]\r\n    } else if (h < 120) {\r\n      return [xm, cm, m]\r\n    } else if (h < 180) {\r\n      return [m, cm, xm]\r\n    } else if (h < 240) {\r\n      return [m, xm, cm]\r\n    } else if (h < 300) {\r\n      return [xm, m, cm]\r\n    } else {\r\n      return [cm, m, xm]\r\n    }\r\n  }\r\n\r\n  if (offset && this.width > 0 && this.height > 0) {\r\n    offset = (offset % 360 + 360) % 360\r\n    var context = this._context\r\n    var imageData = context.getImageData(0, 0, this.width, this.height)\r\n    var pixels = imageData.data\r\n    for (var i = 0; i < pixels.length; i += 4) {\r\n      var hsl = rgbToHsl(pixels[i + 0], pixels[i + 1], pixels[i + 2])\r\n      var h = (hsl[0] + offset) % 360\r\n      var s = hsl[1]\r\n      var l = hsl[2]\r\n      var rgb = hslToRgb(h, s, l)\r\n      pixels[i + 0] = rgb[0]\r\n      pixels[i + 1] = rgb[1]\r\n      pixels[i + 2] = rgb[2]\r\n    }\r\n    context.putImageData(imageData, 0, 0)\r\n    this._setDirty()\r\n  }\r\n}\r\n\r\n/**\r\n* Applies a blur effect to the bitmap.\r\n*\r\n* @method blur\r\n*/\r\nBitmap.prototype.blur = function() {\r\n  for (var i = 0; i < 2; i++) {\r\n    var w = this.width\r\n    var h = this.height\r\n    var canvas = this._canvas\r\n    var context = this._context\r\n    var tempCanvas = document.createElement('canvas')\r\n    var tempContext = tempCanvas.getContext('2d')\r\n    tempCanvas.width = w + 2\r\n    tempCanvas.height = h + 2\r\n    tempContext.drawImage(canvas, 0, 0, w, h, 1, 1, w, h)\r\n    tempContext.drawImage(canvas, 0, 0, w, 1, 1, 0, w, 1)\r\n    tempContext.drawImage(canvas, 0, 0, 1, h, 0, 1, 1, h)\r\n    tempContext.drawImage(canvas, 0, h - 1, w, 1, 1, h + 1, w, 1)\r\n    tempContext.drawImage(canvas, w - 1, 0, 1, h, w + 1, 1, 1, h)\r\n    context.save()\r\n    context.fillStyle = 'black'\r\n    context.fillRect(0, 0, w, h)\r\n    context.globalCompositeOperation = 'lighter'\r\n    context.globalAlpha = 1 / 9\r\n    for (var y = 0; y < 3; y++) {\r\n      for (var x = 0; x < 3; x++) {\r\n        context.drawImage(tempCanvas, x, y, w, h, 0, 0, w, h)\r\n      }\r\n    }\r\n    context.restore()\r\n  }\r\n  this._setDirty()\r\n}\r\n\r\n/**\r\n* Add a callback function that will be called when the bitmap is loaded.\r\n*\r\n* @method addLoadListener\r\n* @param {Function} listner The callback function\r\n*/\r\nBitmap.prototype.addLoadListener = function(listner) {\r\n  if (!this.isReady()) {\r\n    this._loadListeners.push(listner)\r\n  } else {\r\n    listner(this)\r\n  }\r\n}\r\n\r\n/**\r\n* @method _makeFontNameText\r\n* @private\r\n*/\r\nBitmap.prototype._makeFontNameText = function() {\r\n  return (\r\n    (this.fontItalic ? 'Italic ' : '') + this.fontSize + 'px ' + this.fontFace\r\n  )\r\n}\r\n\r\n/**\r\n* @method _drawTextOutline\r\n* @param {String} text\r\n* @param {Number} tx\r\n* @param {Number} ty\r\n* @param {Number} maxWidth\r\n* @private\r\n*/\r\nBitmap.prototype._drawTextOutline = function(text, tx, ty, maxWidth) {\r\n  var context = this._context\r\n  context.strokeStyle = this.outlineColor\r\n  context.lineWidth = this.outlineWidth\r\n  context.lineJoin = 'round'\r\n  context.strokeText(text, tx, ty, maxWidth)\r\n}\r\n\r\n/**\r\n* @method _drawTextBody\r\n* @param {String} text\r\n* @param {Number} tx\r\n* @param {Number} ty\r\n* @param {Number} maxWidth\r\n* @private\r\n*/\r\nBitmap.prototype._drawTextBody = function(text, tx, ty, maxWidth) {\r\n  var context = this._context\r\n  context.fillStyle = this.textColor\r\n  context.fillText(text, tx, ty, maxWidth)\r\n}\r\n\r\n/**\r\n* @method _onLoad\r\n* @private\r\n*/\r\nBitmap.prototype._onLoad = function() {\r\n  this._image.removeEventListener('load', this._loadListener)\r\n  this._image.removeEventListener('error', this._errorListener)\r\n\r\n  this._renewCanvas()\r\n\r\n  switch (this._loadingState) {\r\n    case 'requesting':\r\n      this._loadingState = 'requestCompleted'\r\n      if (this._decodeAfterRequest) {\r\n        this.decode()\r\n      } else {\r\n        this._loadingState = 'purged'\r\n        this._clearImgInstance()\r\n      }\r\n      break\r\n\r\n    case 'decrypting':\r\n      window.URL.revokeObjectURL(this._image.src)\r\n      this._loadingState = 'decryptCompleted'\r\n      if (this._decodeAfterRequest) {\r\n        this.decode()\r\n      } else {\r\n        this._loadingState = 'purged'\r\n        this._clearImgInstance()\r\n      }\r\n      break\r\n  }\r\n}\r\n\r\nBitmap.prototype.decode = function() {\r\n  switch (this._loadingState) {\r\n    case 'requestCompleted':\r\n    case 'decryptCompleted':\r\n      this._loadingState = 'loaded'\r\n\r\n      if (!this.__canvas) this._createBaseTexture(this._image)\r\n      this._setDirty()\r\n      this._callLoadListeners()\r\n      break\r\n\r\n    case 'requesting':\r\n    case 'decrypting':\r\n      this._decodeAfterRequest = true\r\n      if (!this._loader) {\r\n        this._loader = ResourceHandler.createLoader(\r\n          this._url,\r\n          this._requestImage.bind(this, this._url),\r\n          this._onError.bind(this)\r\n        )\r\n        this._image.removeEventListener('error', this._errorListener)\r\n        this._image.addEventListener(\r\n          'error',\r\n          (this._errorListener = this._loader)\r\n        )\r\n      }\r\n      break\r\n\r\n    case 'pending':\r\n    case 'purged':\r\n    case 'error':\r\n      this._decodeAfterRequest = true\r\n      this._requestImage(this._url)\r\n      break\r\n  }\r\n}\r\n\r\n/**\r\n* @method _callLoadListeners\r\n* @private\r\n*/\r\nBitmap.prototype._callLoadListeners = function() {\r\n  while (this._loadListeners.length > 0) {\r\n    var listener = this._loadListeners.shift()\r\n    listener(this)\r\n  }\r\n}\r\n\r\n/**\r\n* @method _onError\r\n* @private\r\n*/\r\nBitmap.prototype._onError = function() {\r\n  this._image.removeEventListener('load', this._loadListener)\r\n  this._image.removeEventListener('error', this._errorListener)\r\n  this._loadingState = 'error'\r\n}\r\n\r\n/**\r\n* @method _setDirty\r\n* @private\r\n*/\r\nBitmap.prototype._setDirty = function() {\r\n  this._dirty = true\r\n}\r\n\r\n/**\r\n* updates texture is bitmap was dirty\r\n* @method checkDirty\r\n*/\r\nBitmap.prototype.checkDirty = function() {\r\n  if (this._dirty) {\r\n    this._baseTexture.update()\r\n    this._dirty = false\r\n  }\r\n}\r\n\r\nBitmap.request = function(url) {\r\n  var bitmap = Object.create(Bitmap.prototype)\r\n  bitmap._defer = true\r\n  bitmap.initialize()\r\n\r\n  bitmap._url = url\r\n  bitmap._loadingState = 'pending'\r\n\r\n  return bitmap\r\n}\r\n\r\nBitmap.prototype._requestImage = function(url) {\r\n  if (Bitmap._reuseImages.length !== 0) {\r\n    this._image = Bitmap._reuseImages.pop()\r\n  } else {\r\n    this._image = new Image()\r\n  }\r\n\r\n  if (this._decodeAfterRequest && !this._loader) {\r\n    this._loader = ResourceHandler.createLoader(\r\n      url,\r\n      this._requestImage.bind(this, url),\r\n      this._onError.bind(this)\r\n    )\r\n  }\r\n\r\n  this._image = new Image()\r\n  this._url = url\r\n  this._loadingState = 'requesting'\r\n\r\n  if (!Decrypter.checkImgIgnore(url) && Decrypter.hasEncryptedImages) {\r\n    this._loadingState = 'decrypting'\r\n    Decrypter.decryptImg(url, this)\r\n  } else {\r\n    this._image.src = url\r\n\r\n    this._image.addEventListener(\r\n      'load',\r\n      (this._loadListener = Bitmap.prototype._onLoad.bind(this))\r\n    )\r\n    this._image.addEventListener(\r\n      'error',\r\n      (this._errorListener =\r\n        this._loader || Bitmap.prototype._onError.bind(this))\r\n    )\r\n  }\r\n}\r\n\r\nBitmap.prototype.isRequestOnly = function() {\r\n  return !(this._decodeAfterRequest || this.isReady())\r\n}\r\n\r\nBitmap.prototype.isRequestReady = function() {\r\n  return (\r\n    this._loadingState !== 'pending' &&\r\n    this._loadingState !== 'requesting' &&\r\n    this._loadingState !== 'decrypting'\r\n  )\r\n}\r\n\r\nBitmap.prototype.startRequest = function() {\r\n  if (this._loadingState === 'pending') {\r\n    this._decodeAfterRequest = false\r\n    this._requestImage(this._url)\r\n  }\r\n}\r\n"]}